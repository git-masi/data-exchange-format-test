package main

script render(bm map[string]int, jm map[string]int) {
    google.charts.load("current", { packages: ["corechart", "bar"] });
    google.charts.setOnLoadCallback(drawChart);

    async function drawChart() {
        const data = {
            binary_message_latency_microseconds_bucket: [
                ['Latency (microseconds)', 'Number of Requests'],
                ...Object.entries(bm)
            ],
            json_message_latency_milliseconds_bucket: [
                ['Latency (milliseconds)', 'Number of Requests'],
                ...Object.entries(jm)
            ]
        };

        Object.entries(data).forEach(([key, value]) => {
            const data = google.visualization.arrayToDataTable(value);

            const options = {
                title: key.replace("_", " ").replace("bucket", ""),
                legend: { position: "none" },
            };

            const body = document.querySelector("body");

            const div = document.createElement("div");

            div.setAttribute("style", "width: 900px; height: 500px; margin-bottom: 20px")

            body.appendChild(div);

            const chart = new google.charts.Bar(div);

            chart.draw(data, options);
        });
    }
}

templ chart(bm map[string]int, jm map[string]int) {
<html>

<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
</head>

<body onload={ render(bm, jm) }></body>

</html>
}